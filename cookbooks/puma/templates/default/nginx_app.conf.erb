<% if @ssl %>
upstream <%= @vhost.app.name %>ssl_upstream {
  <% @upstream_ports.each do |port| %>
server 127.0.0.1:<%= port %>;
  <% end %>
}
<% else %>
upstream <%= @vhost.app.name %>_upstream {
  <% @upstream_ports.each do |port| %>
server 127.0.0.1:<%= port %>;
  <% end %>
}
<% end %>

server {

  #
  # The default port to listen on.
  #
  # Note that this may be also specified as IP:Port combinations.
  #
  # By default Nginx will listen for traffic on the specified port for all IP
  # addresses assigned to the host.
  #
  listen <%= @port %>;

  #
  # Server Names
  #
  # This is the list of IP's and/or domain names with any wildcards or
  # subdomains. The special value '_' is used to match all domains and IPs and
  # generally denotes the default server for the entire Nginx process.
  #
  # Note that if you specify any domains with wild cards, the very first domain
  # listed must be without a wild card. For example:
  #
  # server_name www.mydomain.org *.mydomain.org;
  #
  # It is good practice to include wildcard subdomains so that Nginx will not
  # require a restart when new services are added for an application.
  #
<% unless @vhost.domain_name.nil? || @vhost.domain_name.empty? %>
  server_name <%= @vhost.domain_name %>;
<% else %>
  server_name _;
<% end %>

  #
  # SSL certificates
  #
  # Be sure that the directory and files are owned by and/or readable by the
  # Nginx user. Additionally, it is recommended that you do not use signed
  # certificates. The justification for this reocommendation is that in order to
  # start up the Nginx server the password will need to be typed in every time.
  # This precludes automatic/automated web server restarts on boot or otherwise.
  #
  <% if @ssl %>
  # SSL Certificates
  #
  # If you need to customize SSL please refer to
  # /etc/nginx/servers/<%= @app_name %>/customer.ssl_cert and customer.ssl_cipher

  include /etc/nginx/servers/<%= @app_name %>/ssl_cert;
  include /etc/nginx/servers/<%= @app_name %>/ssl_cipher;
  <% end %>

  #
  # This assigns the maximum accepted body size of client request. It is placed
  # here as a precaution to limit against certain kinds of attacks. Be aware that
  # it is here in case the application accepts large file uploads. In such a case
  # this value will need to be adjusted.
  #
  client_max_body_size 100M;

  #
  # The application root which is inherited for all location blocks below.
  #
  root /data/<%= @vhost.app.name %>/current/public;

  #
  # Logging
  #
  # Log files are stored within the /var/log/engineyard/nginx/ directory.
  #
  <% if @ssl %>
  access_log /var/log/engineyard/nginx/<%= @vhost.app.name %>.ssl.access.log main;
  error_log /var/log/engineyard/nginx/<%= @vhost.app.name %>.ssl.error.log notice;
  <% else %>
  access_log /var/log/engineyard/nginx/<%= @vhost.app.name %>.access.log main;
  error_log /var/log/engineyard/nginx/<%= @vhost.app.name %>.error.log notice;
  <% end %>

  # Adding CORS Header to the font files.
  location ~* \.(eot|otf|ttf|woff|woff2|svg)$ {
    add_header Access-Control-Allow-Origin *;
  }

  # Expire header on assets. For more information on the reasoning behind
  # this please browse http://developer.yahoo.com/performance/rules.html#expires
  #
  # set Expire header on assets: see http://developer.yahoo.com/performance/rules.html#expires
  location ~ ^/(images|assets|javascripts|stylesheets)/ {
  <% if @ssl %>
    try_files $uri $uri/index.html /last_assets/$uri /last_assets/$uri.html @app_<%=@vhost.app.name%>ssl;
  <% else %>
    try_files $uri $uri/index.html /last_assets/$uri /last_assets/$uri.html @app_<%=@vhost.app.name%>;
  <% end %>
  expires 10y;
  }

  #
  # HTTP Error handling.
  #
  # 404 - Resource Not found.
  error_page 404 /404.html;
  # 50X - Application Error(s)
  error_page 500 502 504 /500.html;
  # 503 - System Maintenance
  error_page 503 @503;
  recursive_error_pages on;
  location @503 {

    error_page 405 = /system/maintenance.html;

    # Serve static assets if found.
    if (-f $request_filename) {
      break;
    }

    rewrite ^(.*)$ /system/maintenance.html break;
  }



  error_page 503 /system/maintenance.html;


  #For Puma, simply proxy
  <% if @ssl %>
  location @app_<%=@vhost.app.name%>ssl {
  include /etc/nginx/common/proxy.conf;
  proxy_set_header        X-Forwarded-Proto https;
  proxy_pass http://<%= @vhost.app.name %>ssl_upstream;
  }
  <% else %>
  location @app_<%=@vhost.app.name%> {
  include /etc/nginx/common/proxy.conf;
  proxy_pass http://<%= @vhost.app.name %>_upstream;
  }
  <% end %>

  #
  # The default location will process the request as follows:
  #
  # 1. If a system maintenance page is in place, serve it.
  # 2. If the request uri matches a resource on disk, serve it.
  # 3. If the request uri/index.html matches a cache file on disk, serve it.
  # 4. If the request uri.html is cached on disk, serve it.
  # 5. Failing any caching or system maintenance, pass the request to the
  #    application.
  #
  location / {
    if (-f $document_root/system/maintenance.html) { return 503; }
  <% if @ssl %>
    try_files $uri $uri/index.html $uri.html @app_<%=@vhost.app.name%>ssl;
  <% else %>
    try_files $uri $uri/index.html $uri.html @app_<%=@vhost.app.name%>;
  <% end %>
  }
  <% if @ssl %>
  include /etc/nginx/servers/<%= @vhost.app.name %>/custom.ssl.conf;
  <% else %>
   include /etc/nginx/servers/<%= @vhost.app.name %>/custom.conf;
  <% end %>

}
